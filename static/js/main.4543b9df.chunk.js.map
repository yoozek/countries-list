{"version":3,"sources":["components/CountryCard/CountryCard.jsx","components/CountriesList/CountriesList.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/SearchBox/SearchBox.jsx","components/Stats/Stats.jsx","App.js","reportWebVitals.js","index.js"],"names":["CountryCard","country","languages","map","l","name","join","currencies","c","className","src","flag","capital","population","CountriesList","props","useState","countries","countriesState","setCountriesState","useEffect","Footer","Header","count","SearchBox","type","placeholder","onChange","handleChange","href","Stats","App","setCountries","filteredCountries","setFilteredCountries","Axios","get","then","res","data","length","e","searchValue","target","value","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAyBeA,G,MAvBK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZC,GAAaD,EAAQC,WAAaD,EAAQC,UAAUC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAMC,KAAK,MAC1EC,GAAcN,EAAQM,YAAcN,EAAQM,WAAWJ,KAAI,SAAAK,GAAC,OAAIA,EAAEH,QAAMC,KAAK,MAEnF,OACKL,EACD,sBAAKQ,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,eAAeC,IAAKT,EAAQU,SAG/C,6BAAKV,EAAQI,OAEb,gCACI,8BAAG,yCAAH,IAAoBJ,EAAQW,WAC5B,8BAAG,2CAAH,WAAsBV,QAAtB,IAAsBA,IAAa,MACnC,8BAAG,4CAAH,IAAuBD,EAAQY,cAC/B,8BAAG,0CAAH,IAAqBN,WAZlB,0BCgBJO,EApBO,SAACC,GAAW,IAAD,EACeC,mBAAS,CAACD,EAAME,YAD/B,mBACtBC,EADsB,KACNC,EADM,KAS7B,OANAC,qBAAU,WACFF,IAAmBH,EAAME,WACzBE,EAAkBJ,EAAME,aAE7B,CAACC,EAAgBH,IAGhB,qBAAKN,UAAU,eAAf,SAEKS,EAEKA,EAAef,KAAI,SAAAF,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,OADpD,wDCRHoB,EANA,WACX,OAAS,6CCQEC,EATA,SAACP,GACZ,OACI,mCACI,sDACA,qDAAwBA,EAAMQ,MAA9B,oBCaGC,EAjBG,SAACT,GACf,OACI,sBAAKN,UAAU,aAAf,UACI,uBACIgB,KAAK,OACLC,YAAY,+CACZC,SAAUZ,EAAMa,eAGpB,qBAAKnB,UAAU,YAAf,SACI,mBAAGoB,KAAK,SAAR,yBCNDC,EAJD,WACV,OAAS,yCC0CEC,MApCf,WAAgB,IAAD,EACqBf,mBAAS,IAD9B,mBACNC,EADM,KACKe,EADL,OAEqChB,mBAAS,IAF9C,mBAENiB,EAFM,KAEaC,EAFb,KAuBb,OAnBAd,qBAAU,WACRe,IAAMC,IAAI,wCACTC,MAAK,SAAAC,GACJN,EAAaM,EAAIC,MACjBL,EAAqBI,EAAIC,WAE1B,IAcD,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQc,MAAQN,EAAgBA,EAAUuB,OAAd,IAC5B,cAAC,EAAD,CAAWZ,aAde,SAACa,GAC7B,IAAMC,EAAcD,EAAEE,OAAOC,MAE3BV,EADEQ,EACmBzB,EAAU4B,QAAO,SAAA5C,GAClC,OAAOA,EAAQI,KAAKyC,cAAcC,SAASL,EAAYI,kBAGtC7B,MAQrB,cAAC,EAAD,CAAeA,UAAWgB,IAC1B,cAAC,EAAD,IACA,cAAC,EAAD,QC1BSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4543b9df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CountryCard = ({country}) => {\r\n    const languages = !country.languages || country.languages.map(l => l.name).join(', ')\r\n    const currencies = !country.currencies || country.currencies.map(c => c.name).join(', ')\r\n\r\n    return (\r\n        !country ? <div></div> :\r\n        <div className='country-card'>\r\n            <div className='country-flag-wrapper'>\r\n                <img className='country-flag' src={country.flag} />\r\n            </div>\r\n\r\n            <h3>{country.name}</h3>\r\n\r\n            <div>\r\n                <p><b>Capital:</b> {country.capital}</p>\r\n                <p><b>Languages:</b> {languages ?? \"\"}</p>\r\n                <p><b>Population:</b> {country.population}</p>\r\n                <p><b>Currency:</b> {currencies}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CountryCard;","import React, { useEffect, useState } from 'react';\r\nimport CountryCard from '../CountryCard/CountryCard';\r\n\r\nconst CountriesList = (props) => {\r\n    const [countriesState, setCountriesState] = useState([props.countries])\r\n    \r\n    useEffect(() => {\r\n        if (countriesState !== props.countries) {\r\n            setCountriesState(props.countries)\r\n        }\r\n    }, [countriesState, props])\r\n\r\n    return (\r\n        <div className='country-list'>\r\n            {\r\n            !countriesState \r\n                ? <div>No countries found</div> \r\n                : countriesState.map(country => <CountryCard country={country} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CountriesList;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return ( <footer>\r\n        Footer\r\n    </footer> );\r\n}\r\n \r\nexport default Footer;","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return ( \r\n        <header>\r\n            <h1>World countries Data</h1>\r\n            <h2>Currently, we have {props.count} countries</h2>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Search countries by name, city and languages\"\r\n                onChange={props.handleChange}\r\n            />\r\n\r\n            <div className=\"stats-btn\">\r\n                <a href=\"#stats\">Stats</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Stats = () => {\r\n    return ( <div>Stats</div> );\r\n}\r\n \r\nexport default Stats;","import Axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport CountriesList from './components/CountriesList/CountriesList';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport SearchBox from './components/SearchBox/SearchBox';\nimport Stats from './components/Stats/Stats';\n\nfunction App() {\n  const [countries, setCountries] = useState([])\n  const [filteredCountries, setFilteredCountries] = useState([])\n  \n  useEffect(() => {\n    Axios.get('https://restcountries.eu/rest/v2/all')\n    .then(res => {\n      setCountries(res.data)\n      setFilteredCountries(res.data)\n    });\n  }, [])\n\n  const handleSearchBoxChange = (e) => {\n    const searchValue = e.target.value\n    if (searchValue) {\n      setFilteredCountries(countries.filter(country => {\n          return country.name.toLowerCase().includes(searchValue.toLowerCase());\n        }))\n    } else {\n      setFilteredCountries(countries)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header count={!countries ? 0 : countries.length}/>\n      <SearchBox handleChange={handleSearchBoxChange} />\n      <CountriesList countries={filteredCountries}/>\n      <Stats />\n      <Footer />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}